{"remainingRequest":"E:\\code\\chuzhouxueyuan\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\code\\chuzhouxueyuan\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\code\\chuzhouxueyuan\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\chuzhouxueyuan\\src\\components\\daohang\\daohang.vue?vue&type=template&id=d0c0a6ce&","dependencies":[{"path":"E:\\code\\chuzhouxueyuan\\src\\components\\daohang\\daohang.vue","mtime":1639704818000},{"path":"E:\\code\\chuzhouxueyuan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670835181809},{"path":"E:\\code\\chuzhouxueyuan\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1670835191396},{"path":"E:\\code\\chuzhouxueyuan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670835181809},{"path":"E:\\code\\chuzhouxueyuan\\node_modules\\vue-loader\\lib\\index.js","mtime":1670835187845}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}