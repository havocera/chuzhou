{"remainingRequest":"E:\\code\\chuzhouxueyuan\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\code\\chuzhouxueyuan\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\code\\chuzhouxueyuan\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\chuzhouxueyuan\\src\\components\\sym.vue?vue&type=template&id=336b9167&scoped=true&","dependencies":[{"path":"E:\\code\\chuzhouxueyuan\\src\\components\\sym.vue","mtime":1663772455613},{"path":"E:\\code\\chuzhouxueyuan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670835181809},{"path":"E:\\code\\chuzhouxueyuan\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1670835191396},{"path":"E:\\code\\chuzhouxueyuan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670835181809},{"path":"E:\\code\\chuzhouxueyuan\\node_modules\\vue-loader\\lib\\index.js","mtime":1670835187845}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}